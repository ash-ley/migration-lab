name: Terraform Deployment
on:
  push:
    branches:
      - main
env:
  AWS_REGION : "eu-west-1"
permissions:
      id-token: write   # This is required for requesting the JWT
      contents: read    # This is required for actions/checkout
jobs:
  onprem-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Git clone the repository
        uses: actions/checkout@v3

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.ACTIONS_ROLE }}
          role-session-name: OIDCsession
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform setup
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        id: init
        run: terraform -chdir=onprem/ init

      - name: Terraform fmt
        id: fmt
        run: terraform -chdir=onprem/ fmt -check
        continue-on-error: true

      - name: Terraform Validate
        id: validate
        run: terraform -chdir=onprem/ validate -no-color

      - name: Terraform Plan
        id: plan
        run: terraform -chdir=onprem/ plan -no-color

      - name: Terraform Apply
        id: apply
        run: terraform -chdir=onprem/ apply --auto-approve

  migration-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Git clone the repository
        uses: actions/checkout@v3

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.ACTIONS_ROLE }}
          role-session-name: OIDCsession
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform setup
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        id: init
        run: terraform -chdir=migration/ init

      - name: Terraform fmt
        id: fmt
        run: terraform -chdir=migration/ fmt -check
        continue-on-error: true

      - name: Terraform Validate
        id: validate
        run: terraform -chdir=migration/ validate -no-color

      - name: Terraform Plan
        id: plan
        run: terraform -chdir=migration/ plan -no-color

      - name: Terraform Apply
        id: apply
        run: terraform -chdir=migration/ apply --auto-approve